N = 8  # Size of the chessboard

def solveNQueens(board, col):
    if col == N:
        printBoard(board)
        return True
    for i in range(N)  :
        if isSafe(board, i, col):
            board[i][col] = 1
            if solveNQueens(board, col + 1):
                return True
            board[i][col] = 0
    return False

def isSafe(board, row, col):
    for x in range(col):
        if board[row][x] == 1:
            return False
    for x, y in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[x][y] == 1:
            return False
    for x, y in zip(range(row, N, 1), range(col, -1, -1)):
        if board[x][y] == 1:
            return False
    return True

def printBoard(board):
    for row in board:
        line = ""
        for cell in row:
            line += "Q " if cell == 1 else ". "
        print(line.strip())
    print("\n" + "-" * (2 * N - 1) + "\n")

board = [[0 for _ in range(N)] for _ in range(N)]
if not solveNQueens(board, 0):
    print("No solution found")
